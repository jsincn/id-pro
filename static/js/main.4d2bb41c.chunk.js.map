{"version":3,"sources":["components/RequestForm.js","components/InfoPanel.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["RequestForm","state","email","sms","phone","emailAddress","acceptedPrivacy","captcha","form_visible","waiting_visible","sent_visible","message","handleChange","event","setState","target","name","checked","handleChangePhone","value","handleChangeText","onSubmitCaptcha","console","log","handleFormSubmit","forceUpdate","preventDefault","params","URLSearchParams","append","axios","post","headers","then","response","catch","error","Container","this","FormControl","component","FormLabel","FormGroup","TextField","disabled","id","label","onKeyUp","FormControlLabel","style","paddingTop","paddingBottom","control","Checkbox","onChange","FormHelperText","sitekey","Button","variant","onClick","e","color","React","Component","InfoPanel","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","marginTop","Link","href","List","aria-label","ListItem","ListItemText","primary","Footer","Grid","container","spacing","textAlign","item","md","useStyles","makeStyles","theme","root","flexGrow","padding","paper","palette","text","secondary","App","classes","className","xs","Paper","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d2bb41c.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Container } from '@material-ui/core';\nimport 'fontsource-roboto';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\n// axios.defaults.withCredentials = true;\n\n\nexport default class RequestForm extends React.Component {\n\n    state = {\n        email: true,\n        sms: false,\n        phone: \"\",\n        emailAddress: \"\",\n        acceptedPrivacy: false,\n        captcha: false,\n        form_visible: true,\n        waiting_visible: false,\n        sent_visible: false,\n        message: \"Jetzt Teilnahmecode anfordern!\"\n    };\n\n    handleChange = (event) => {\n        this.setState({ ...this.state, [event.target.name]: event.target.checked });\n    }\n\n    handleChangePhone = (value) => {\n        this.setState({ ...this.state, 'phone': value });\n    }\n\n    handleChangeText = (event) => {\n        this.setState({ ...this.state, [event.target.name]: event.target.value });\n    }\n\n    onSubmitCaptcha = (value) => {\n        console.log(value);\n        this.setState({ ...this.state, 'captcha': value })\n    }\n\n    handleFormSubmit = (event) => {\n        // if (!(this.state.emailAddress.includes(\"@stud.hs-heilbronn.de\") || this.state.emailAddress.includes(\"@hs-heilbronn.de\"))) {\n        //     return;\n        // }\n        this.setState({ ...this.state, 'message': \"Bitte Warten.\" });\n        this.setState({ ...this.state, 'waiting_visible': true });\n        this.setState({ ...this.state, 'form_visible': false });\n        this.forceUpdate();\n        event.preventDefault();\n\n        var params = new URLSearchParams();\n        params.append('email', this.state.email);\n        params.append('sms', this.state.sms);\n        params.append('phone', this.state.phone);\n        params.append('emailAddress', this.state.emailAddress);\n        params.append('captcha', this.state.captcha);\n        axios.post('https://backend.flow.stei.ml/send',\n            params, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then((response) => {\n            this.setState({ ...this.state, 'message': \"Code versendet.\" });\n\n        })\n            .catch((error) => {\n                this.setState({ ...this.state, 'message': \"Es ist ein Fehler aufgetreten. Bitte Versuchen sie es spÃ¤ter erneut.\" });\n            });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h3>{this.state.message}</h3>\n\n                {this.state.form_visible ?\n                    <div>\n\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Empfangsmethode</FormLabel>\n                            <FormGroup>\n                                <FormGroup>\n                                    {/* <FormControlLabel\n                                control={<Checkbox checked={this.state.email} onChange={this.handleChange} name=\"email\" />}\n                                label=\"E-Mail\"\n                            /> */}\n                                    <TextField disabled={!this.state.email} id=\"standard-basic\" label=\"E-Mail\" name=\"emailAddress\" onKeyUp={this.handleChangeText} />\n                                </FormGroup>\n                                {/* <FormGroup hidden>\n                            <FormControlLabel\n                                control={<Checkbox checked={this.state.sms} onChange={this.handleChange} name=\"sms\" disabled/>}\n                                label=\"SMS\"\n                            />\n                            <MuiPhoneNumber disabled={!this.state.sms} defaultCountry={'de'} onChange={this.handleChangePhone} />\n                        </FormGroup> */}\n                            </FormGroup>\n                            <FormControlLabel\n                                style={{ paddingTop: 10, paddingBottom: 10 }}\n                                control={<Checkbox checked={this.state.acceptedPrivacy} onChange={this.handleChange} name=\"acceptedPrivacy\" />}\n                                label=\"Ich habe die DatenschutzerklÃ¤rung gelesen und verstanden.\"\n                            />\n                            <FormHelperText>Hiermit willige ich ein, dass meine personenbezogenen Daten (Alter, Geschlecht, Abschluss, Mathematiknote) in anonymisierter Form in die Auswertung der Studie aufgenommen werden kann. </FormHelperText>\n                            <ReCAPTCHA\n                                style={{ paddingTop: 10, paddingBottom: 10 }}\n                                sitekey=\"6Lc33tMZAAAAABLinsP0Q-kJwG2oLwL27gaXXifP\"\n                                onChange={this.onSubmitCaptcha}\n                            />\n\n                            <Button variant=\"contained\" onClick={e => this.handleFormSubmit(e)} color=\"primary\" disabled={(!this.state.email && !this.state.sms) || !this.state.captcha || !this.state.acceptedPrivacy}>Code Anfordern</Button>\n                        </FormControl>\n                    </div>\n                    : null}\n            </Container>\n        );\n    }\n\n}","import React from 'react';\nimport { List, ListItem, ListItemText, Accordion, AccordionSummary, AccordionDetails, Typography, Link } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nexport default class InfoPanel extends React.Component {\n\n\n  render() {\n    return (<div><Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>Ãber die Studie</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Typography>\n          <diV style={{ marginTop: 10 }}>\n            Liebe Studierende,\n          </diV>\n          <div style={{ marginTop: 10 }}>\n            vielen Dank, dass sich an meiner Forschungsarbeit zum Thema âMotivation, Motiv und Denkstil â die Wirkung von Flow auf das Lernen von Mathematik-Grundlagenâ beteiligen. Im Rahmen einer LÃ¤ngsschnittanalyse wird ermittelt, welche Faktoren Einfluss auf das Erleben von Flow beim Lernen haben und inwiefern dadurch die Ãbungszeiten und der SpaÃ am Lernen auch in einem Fach wie Mathematik erhÃ¶ht werden kann. LÃ¤ngsschnittanalyse heiÃt in diesem Fall, dass ich Sie zu verschiedenen Zeitpunkten befragen mÃ¶chte. Der erste Fragebogen ist etwas umfangreicher und dauert in der Bearbeitung etwa 15 Minuten, alle weiteren Befragungen sind deutlich kÃ¼rzer und dauern maximal 5 Minuten in der Bearbeitung.\n          </div>\n          <div style={{ marginTop: 10 }}>\n            Damit die Ergebnisse anonym immer einer Person zuzuordnen sind, mÃ¼ssen Sie mit dieser E-Mail einen ID-Code beantragen. Bitte bewahren Sie diesen 4-stelligen Zahlencode (Zahl zwischen 1000 und 9999) gut auf, er muss auf allen FragebÃ¶gen und auch beim Ãben und beim MGT in bettermarks eingegeben werden.\n          </div>\n          <div style={{ marginTop: 10 }}>\n            Die ersten beiden FragebÃ¶gen dÃ¼rfen Sie wÃ¤hrend der EinfÃ¼hrungsveranstaltung beantworten. Sollten das bei Ihnen nicht geklappt haben, finden Sie den ersten Fragebogen unter folgendem Link: <Link href=\"https://www.soscisurvey.de/flowstudie_2021/\">Link zum Fragebogen</Link>\n            <br></br>\n            Ebenso sollten Sie immer vor und nach dem Ãben einen kurzen Fragebogen ausfÃ¼llen, dabei geht es um Ihre momentane Stimmungslage, das AusfÃ¼llen dauert nur wenige Minuten.\n            </div><div style={{ marginTop: 10 }}>\n            Vor dem Ãben bitte den Fragebogen zu Ihrer aktuellen Motivation ausfÃ¼llen - <Link href=\"https://www.soscisurvey.de/motivationSS21/\">Link zum Fragebogen</Link>\n            </div><div style={{ marginTop: 0 }}>Nach dem Ãben bitte den Fragebogen zum Flow-Erleben ausfÃ¼llen - <Link href=\"https://www.soscisurvey.de/FlowSS21/\">Link zum Fragebogen</Link>\n            </div><div style={{ marginTop: 10 }}>\n\n            Ein letzter kurzer Fragebogen kommt dann nach dem Mathe-Grundlagen-Test im April.\n\n            Wichtig: Bitte geben Sie auf allen FragebÃ¶gen Ihren ID-Code an, damit ich die FragebÃ¶gen anonym zuordnen kann.\n            </div>\n        </Typography>\n      </AccordionDetails>\n    </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Zur Person</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Als Mitarbeiterin des E-Learning und E-Assessment Team bin ich zustÃ¤ndig fÃ¼r die Organisation und DurchfÃ¼hrung des Mathematik-Grundlagen-Tests an der Hochschule Heilbronn. Im Rahmen meiner Promotion fÃ¼hre ich in diesem Semester mit den Kursteilnehmern eine LÃ¤ngsschnittanalyse zum Thema âMotivation, Motiv und Denkstil â die Wirkung von Flow auf das Lernen von Mathematik-Grundlagenâ durch. Bei Fragen zur Studie stehe ich Ihnen gerne unter der E-Mail-Adresse <Link href=\"mailto:kerstin.steimle@hs-heilbronn.de\">kerstin.steimle@hs-heilbronn.de</Link> zur VerfÃ¼gung.  </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Infos zur Verlosung</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Ihr ID-Code ist auch der GlÃ¼ckscode fÃ¼r die Verlosung von\n\n            <br />\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              <ListItem>\n                <ListItemText primary=\"1.\tPreis: Raspberry Pi Zero WH Starter Kit\" />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"2.\tPreis: Anker Sound Core Bluetooth Lautsprecher o. vergleichbar\" />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"3.\tPreis: Anker PowerCore Slim 10,000\" />\n              </ListItem>\n            </List>\n           \n          \n            \n            \n            \n\n\n            Die Preis werden unter all den Teilnehmern verlost, die an sÃ¤mtlichen Befragungen der LÃ¤ngsschnittanalyse teilgenommen haben.\n\n\n            Der Gewinn-ID-Code wird im Mathe-Grundlagen-Kurs in Ilias verÃ¶ffentlicht. Nachweis ist die E-Mail mit dem ID-Code, die sie vom System erhalten haben.\n\n\n\n              </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Datenschutz</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Die fÃ¼r die Erstellung des Codes von Ihnen angegebene E-Mail-Adresse wird von mir nicht gespeichert und kann aufgrund eines kryptografischen Hashingverfahrens (sha256) von mir nicht rÃ¼ckverfolgt werden. Dieses Hashing ermÃ¶glicht es allerdings mit der gleichen E-Mail-Adresse den ID-Code erneut abzufragen. Bitte archivieren Sie die E-Mail mit Ihrem ID-Code dennoch sorgfÃ¤ltig, damit Sie bei allen Befragungen und beim Ãben in Bettermarks, sowie im Anschluss an den Mathe-Grundlagen-Test einfach darauf zugreifen kÃ¶nnen.\n\n            Mit der Anforderung des ID-Codes stimmen Sie zu, dass die in der Studie von Ihnen gemachten Angaben und persÃ¶nlichen Daten in anonymisierter Form fÃ¼r die genannten Forschungszwecke verwendet werden dÃ¼rfen.\n\n            Bei Fragen wenden Sie sich bitte per E-Mail an <Link href=\"mailto:kerstin.steimle@hs-heilbronn.de\">kerstin.steimle@hs-heilbronn.de</Link>\n\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Kontakt</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <b>Inhaltliche Verantwortung:</b>\n            <div>\n              Dipl.-Kffr. Kerstin Steimle\n              </div><div>\n              Telefon: +49 7131 504 6735\n              </div><div>\n              E-Mail: <Link href=\"mailto:kerstin.steimle@hs-heilbronn.de\">kerstin.steimle@hs-heilbronn.de</Link>\n            </div><div>\n              BÃ¼roadresse: G212 Campus Sontheim\n              </div><div>\n              Postadresse: Max-Planck-Str. 39, 74081 Heilbronn\n            </div>\n            <div>\n              <b>Technische Realisierung:</b>\n            </div>\n            <div>Jakob Steimle<br />Mail: <Link href=\"mailto:jakob@stei.ml\">jakob@stei.ml</Link><br />Web: <Link href=\"https://stei.ml\">stei.ml</Link></div>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    </div>);\n  }\n\n}","import React from 'react';\nimport { Grid, Link} from '@material-ui/core';\n\n\n\nexport default class Footer extends React.Component {\n\n\n    render() {\n\n        return (\n            <div>\n                <Grid container spacing={3} style={{textAlign:'center'}}>\n                    <Grid item md={12}>\n                        Tool by <Link href=\"https://stei.ml\">Jakob Steimle. </Link>Fork on <Link href=\"\">Github</Link>.\n                    </Grid>\n        \n                </Grid>\n            </div>)\n    }\n}","import React from 'react';\nimport './App.css';\nimport RequestForm from './components/RequestForm.js';\nimport InfoPanel from './components/InfoPanel.js';\nimport Footer from './components/Footer.js'\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n\n  },\n  paper: {\n    padding: theme.spacing(2),\n\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <h1>Motivation, Motiv und Denkstil â die Wirkung von Flow auf das Lernen von Mathematik-Grundlagen</h1>\n        </Grid>\n        <Grid item md={4}>\n          <Paper className={classes.paper}><RequestForm></RequestForm></Paper>\n        </Grid>\n        <Grid item md={8}>\n          <InfoPanel></InfoPanel>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}><Footer></Footer></Paper>\n        </Grid>\n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}